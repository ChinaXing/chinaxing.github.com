#+begin_html
---
layout: tech-post
title: Perl Alien 介绍
category: Perl
change_frequency: monthly
tag: Alien
---
#+end_html

** Alien是什么
本文介绍Perl中的Alien。

Alien 是一个名字空间或者一系列Module/Perl package。 

Alien的目标是对C库进行封装，封装成Perl模块的形式，方便安装和使用。

如[[http://search.cpan.org/perldoc?Alien%3A%3AOpenSSL][Alien::NSS]] 是OpenSSL库的Alien封装。我们可以在其CPAN页面上看到使用说明。

** Alien的目标
Alien的目标是确保某个库已经安装。

如Alien::NSS库的目标是确保OpenSSL的库已经安装，如果我们的Perl模块依赖OpenSSL的C库，我们可以在Build.PL中添加对Alien::NSS的依赖，从而确保安装
模块的时候，OpenSSL库已经安装。

** Alien模块的约定/保证
1. 安装时候确保依赖的包已经安装，如果未安装则安装他们。
2. 使用Alien模块的时候，确保需要的包存在，否则报错给调用者。
3. 将C库的源码和模块打包绑定发布，或者在安装的时候下载。
4. 允许模块作者访问Alien模块获取的信息。
5. 良好的文档保证容易正确使用。
6. 容易地使用Module::Build。

** 编写Alien模块
1. 继承Alien::Base , use parent Alien::Base;
2. 编写Build.PL, 继承Alien::Base::ModuleBuild, 根据Alien::Base::ModuleBuild 配置，构建其实例，然后调用create_build_script方法。
【参见：Alien::NSS等模块的Build.PL文件。】

** 实例
下面以[[http://search.cpan.org/perldoc?Alien%3A%3ATidyp][Alien::Tidyp]] 为例来看,结合[[http://search.cpan.org/perldoc?HTML%3A%3ATidy][HTML::Tidy ]]模块对其的使用来看Alien模块的作用和使用方式：
- HTML::Tidy模块的 [[http://cpansearch.perl.org/src/PETDANCE/HTML-Tidy-1.54/Makefile.PL][Makefile.PL]] 文件中有如下内容：
  #+BEGIN_SRC perl :eval no
  eval { require Alien::Tidyp; };
  
  if ( !$@ ) {
      print "Using tidyp via Alien::Tidyp\n";
      $libs = Alien::Tidyp->config('LIBS');
      $inc = Alien::Tidyp->config('INC');
  }
  #+END_SRC
  从中可以发现HTML::Tidy模块在编译、build的时候回依赖Tidyp这个C库，而它是通过Alien::Tidyp这个模块来间接获取tidyp这个库的一些配置信息（动态连接库的位置LIBS和头文件的位置INC）。\\
  从这里我们可以发现Alien的用途：帮助其它模块找到相关库的配置信息。是一个helper类型的模块。
- Alien::Tidyp的 [[http://cpansearch.perl.org/src/KMX/Alien-Tidyp-v1.4.7/Build.PL][Build.PL]] 文件有如下内容：
  #+BEGIN_SRC perl :eval no
  # set what tidyp tarball we are gonna use
  $builder->notes('tidyp_url', [ 
      'http://github.com/downloads/petdance/tidyp/tidyp-1.04.tar.gz',
      'https://github.com/downloads/petdance/tidyp/tidyp-1.04.tar.gz',
      'http://strawberryperl.com/package/kmx/testing/tidyp-1.04.tar.gz',
    ]); # has to be an array
  $builder->notes('tidyp_dir', 'tidyp-1.04'); # dirname inside the tarball
  $builder->notes('tidyp_sha1', '5d9050512259c3a67a2f48469555932e3a7b8bd0');
  #+END_SRC
  从这里和Alien::Tidyp的文档，我们大致可以知道，Alien::Tidyp在安装自身的时候做了什么：
  - 探测tidyp的位置，包括头文件和二进制库的位置，存储在Alien::Tidyp::ConfigData模块中（此模块在AlienTidyp安装后生成）
  - 如果没有安装则进行从source code的构建，从上面代码片段可以发现其使用的代码位置，然后将信息记录在Alien::Tidyp::ConfigData模块中
  最终，Alien::Tidyp安装完成后，我们就可以从其模块中得到tidyp这个库的一些配置信息。这也就是Alien模块的作用：获取库的配置信息（如果没有则安装它们）。

 
