#+BEGIN_HTML
---
date: 2015-01-11 19:40:06
template: tech.jade
title: Erlang 语言
category: Erlang
chage_frequency: monthly
tag: Erlang
---
#+END_HTML
#+OPTIONS: toc:nil
#+TOC: headlines 2

Erlang语言，时间上不算新，1987与Perl同岁。为大并发设计，支持热升级，分布式。用于电信系统。

** 核心概念
+ 进程 :: 进程代表一个执行体，进程比较轻量，可以创建非常非常多。每个进程是一个erlang虚拟机。
+ 消息 :: 进程通信和交互通过传递消息，除此之外几乎没有共享状态的途径。
+ 函数式 :: FP的特性，如递归、不可变变量，绑定、模式匹配等。
+ 行为与策略分离 :: OTP主张设计原则是行为与策略分离，一个行为可以服务无数多的策略，行为负责那些通用的与业务逻辑无关的部分。
+ crash :: 如果进程出错，那么让它Crash推出，而不是捕获异常。其它进程会收到消息，进行响应异常。
+ ETS/DETS :: 基于内存和基于磁盘的映射存储。他们可以用来实现数据的存放。
+ Node :: 每个Node代表一个Erlang虚拟机集，多个Node实现分布式。
+ OTP :: 不是Erlang语言的部分。它定义一个设计规范，以及一些成熟的框架，方便开发稳定健壮的Erlang应用和系统。
+ 变量 :: 变量名大写开头
+ atom :: atom 代表了一种类似其它语言常量的东西
+ port :: erlang与其它语言的程序对接，使用port的概念，将其它程序映射为一个进程。通过port进行交互。

** 工具和支持
+ rebar :: 项目管理，类似maven。

** 应用场景
+ 网络通信 :: 网络高并发的通信场景下，Erlang有天然优势，毕竟它就是为此设计的。此外，Erlang对于网络数据包的处理非常方便，解包和封包都通过模式匹配很轻松的完成。
+ 网络应用服务器 :: 如web游戏，网络应用在线聊天服务器等

** 学习参考
+ [[http://blog.yufeng.info/archives/category/erlang][余峰的erlang研究]]
+ github
