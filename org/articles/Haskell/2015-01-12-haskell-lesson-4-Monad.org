#+BEGIN_HTML
---
date: 2015-01-12 00:39:18
template: tech.jade
title: Haskell 第四课 —— Monad
category: Haskell
chage_frequency: monthly
tag: Haskell
---
#+END_HTML
** Monad 
   Monad is an Applicative Functor
   #+BEGIN_SRC haskell
     class Monad m where
       return = a -> m a
       (>>=) :: m a -> (a -> m b) -> m b
       (>>) :: ma -> m b -> m b
       (>>) = (\_ -> x)
       fail :: String -> m a
       fail _ = error
   #+END_SRC
** do
  chain *nested* Monad toggether.
  #+BEGIN_SRC haskell
    ret = Just 10 >>= (\x -> Just 20 >>= (\y -> Just 30 >>= (\z -> Just (x + y + z)))))
    ret = do
       x <- Just 10
       y <- Just 30
       z <- Just 20
       return (x + y + z)
  #+END_SRC

  
  
