#+BEGIN_HTML
---
date: 2013-04-19
template: tech.jade
title: Linux中系统资源limit
category: Linux
tag: linux,limits
change_frequency: monthly
---
#+END_HTML
#+OPTIONS: toc:nil
#+TOC: headlines 2
linux 系统通过进程的rlimit字段，限制进程的资源使用，包括：文件打开数,core文件大小等，可以通过ulimit命令查看当前进程的设置:
#+BEGIN_SRC sh :exports both :results output replace scalar :eval no-export
ulimit -a
#+END_SRC

#+RESULTS:
#+begin_example
time(seconds)        unlimited
file(blocks)         unlimited
data(kbytes)         unlimited
stack(kbytes)        8515
coredump(blocks)     0
memory(kbytes)       unlimited
locked memory(kbytes) 64
process              31366
nofiles              1024
vmemory(kbytes)      unlimited
locks                unlimited
#+end_example


在程序中通过getrlimt和setrlimit系统调用可以获取和设置当前进程的limit值。

对于普通用户进程limit 只能调小，不能调大超过当前值，root用户没有此限制。

limit 设置中有Hard和Soft两个值，Hard表示无法超过此值，Soft表示可以调整超出此值。

*** limit设置策略

1. 登录用户\\
   通过pam_limits模块来设置，pam\_limits模块是PAM认证的一个模块，这一过程在用户登录的时候进行。\\
   用户登录的时候pam_limits读取/etc/security/limits.conf 和 /etc/security/limits.d/*.conf 按照其中的配置进行设置。\\
   加载顺序：先读取limits.conf，然后再用limits.d/中的配置覆盖。
2. 系统进程\\
   对于通过init启动的进程，如/etc/init.d/下面的进程，由于不是通过登录产生的，所以上面提到的配置文件对其无效，这些进程的limits继承自init进程（它们的父进程）。\\
   如果要设置这些进程的limit，可以由程序自己设定，也可以通过配置/etc/initscripts，在此脚本中设置，来达到目的。\\
   /etc/initscripts脚本在inittab执行之前执行，可以man initscripts获得帮助。
3. 子进程\\
   子进程继承父进程的值。

*** inittab与/etc/rcX.d/
init进程会执行inittab的配置，可以看到inittab的配置中有这样的配置:
#+BEGIN_EXAMPLE
l0:0:wait:/etc/rc.d/rc 0
l1:1:wait:/etc/rc.d/rc 1
l2:2:wait:/etc/rc.d/rc 2
l3:3:wait:/etc/rc.d/rc 3
l4:4:wait:/etc/rc.d/rc 4
l5:5:wait:/etc/rc.d/rc 5
l6:6:wait:/etc/rc.d/rc 6
#+END_EXAMPLE

根据不同的runlevel，会转向执行相应的目录的启动项
